/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id "java-library"
    // Support building a distribution ZIP that contains the JAR file and the library dependencies.
    id "java-library-distribution"
    // Support publishing build artifacts to an Apache Maven repository.
    id "maven-publish"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Versions of all dependencies, organized in descending alphabetical order.
def versions = [
        Cirrus    : "1.0-SNAPSHOT",
        Guava     : "30.1-jre",
        Immutables: "2.8.8",
        Java      : "11",
        JUnit     : "5.7.2"
]

def repository = "project-cirrus"
group "org.cirrus.messaging.core"
version versions.Cirrus

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(versions.Java)
    }
}

dependencies {
    // This dependency is used for code generation from annotated code.
    annotationProcessor "org.immutables:value:$versions.Immutables"
    // This dependency is only used to compile the source code.
    compileOnly "org.immutables:value:$versions.Immutables"
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:$versions.Guava"
    // Use JUnit Jupiter for testing.
    testImplementation "org.junit.jupiter:junit-jupiter:$versions.JUnit"
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = String.valueOf("https://maven.pkg.github.com/$repository/$rootProject.name")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}